{"Typealiases.html#/s:18LDSwiftEventSource22ConnectionErrorHandlera":{"name":"ConnectionErrorHandler","abstract":"<p>Type for a function that will be notified when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EventSource.html\">EventSource</a></code> client encounters a connection failure.</p>"},"Typealiases.html#/s:18LDSwiftEventSource15HeaderTransforma":{"name":"HeaderTransform","abstract":"<p>Type for a function that will take in the current HTTP headers and return a new set of HTTP headers to be used when"},"Structs/MessageEvent.html#/s:18LDSwiftEventSource07MessageB0V4dataSSvp":{"name":"data","abstract":"<p>The event data of the event.</p>","parent_name":"MessageEvent"},"Structs/MessageEvent.html#/s:18LDSwiftEventSource07MessageB0V04lastB2IdSSSgvp":{"name":"lastEventId","abstract":"<p>The last seen event id, or the event id set in the Config if none have been received.</p>","parent_name":"MessageEvent"},"Structs/MessageEvent.html#/s:18LDSwiftEventSource07MessageB0V4data04lastB2IdACSS_SSSgtcfc":{"name":"init(data:lastEventId:)","abstract":"<p>Constructor for a <code>MessageEvent</code></p>","parent_name":"MessageEvent"},"Structs/MessageEvent.html":{"name":"MessageEvent","abstract":"<p>Struct representing received event from the stream.</p>"},"Protocols/EventHandler.html#/s:18LDSwiftEventSource0B7HandlerP8onOpenedyyF":{"name":"onOpened()","abstract":"<p>EventSource calls this method when the stream connection has been opened.</p>","parent_name":"EventHandler"},"Protocols/EventHandler.html#/s:18LDSwiftEventSource0B7HandlerP8onClosedyyF":{"name":"onClosed()","abstract":"<p>EventSource calls this method when the stream connection has been closed.</p>","parent_name":"EventHandler"},"Protocols/EventHandler.html#/s:18LDSwiftEventSource0B7HandlerP9onMessage9eventType07messageB0ySS_AA0fB0VtF":{"name":"onMessage(eventType:messageEvent:)","abstract":"<p>EventSource calls this method when it has received a new event from the stream.</p>","parent_name":"EventHandler"},"Protocols/EventHandler.html#/s:18LDSwiftEventSource0B7HandlerP9onComment7commentySS_tF":{"name":"onComment(comment:)","abstract":"<p>EventSource calls this method when it has received a comment line from the stream.</p>","parent_name":"EventHandler"},"Protocols/EventHandler.html#/s:18LDSwiftEventSource0B7HandlerP7onError5errorys0F0_p_tF":{"name":"onError(error:)","abstract":"<p>This method will be called for all exceptions that occur on the network connection (including an","parent_name":"EventHandler"},"Protocols/EventHandler.html":{"name":"EventHandler","abstract":"<p>Protocol for an object that will receive SSE events.</p>"},"Enums/ReadyState.html#/s:18LDSwiftEventSource10ReadyStateO3rawyA2CmF":{"name":"raw","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EventSource.html\">EventSource</a></code> client has not been started yet.</p>","parent_name":"ReadyState"},"Enums/ReadyState.html#/s:18LDSwiftEventSource10ReadyStateO10connectingyA2CmF":{"name":"connecting","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EventSource.html\">EventSource</a></code> client is attempting to make a connection.</p>","parent_name":"ReadyState"},"Enums/ReadyState.html#/s:18LDSwiftEventSource10ReadyStateO4openyA2CmF":{"name":"open","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EventSource.html\">EventSource</a></code> client is active and listening for events.</p>","parent_name":"ReadyState"},"Enums/ReadyState.html#/s:18LDSwiftEventSource10ReadyStateO6closedyA2CmF":{"name":"closed","abstract":"<p>The connection has been closed or has failed, and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EventSource.html\">EventSource</a></code> will attempt to reconnect.</p>","parent_name":"ReadyState"},"Enums/ReadyState.html#/s:18LDSwiftEventSource10ReadyStateO8shutdownyA2CmF":{"name":"shutdown","abstract":"<p>The connection has been permanently closed and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EventSource.html\">EventSource</a></code> not reconnect.</p>","parent_name":"ReadyState"},"Enums/ConnectionErrorAction.html#/s:18LDSwiftEventSource21ConnectionErrorActionO7proceedyA2CmF":{"name":"proceed","abstract":"<p>Specifies that the error should be logged normally and dispatched to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EventHandler.html\">EventHandler</a></code>. Connection retrying will","parent_name":"ConnectionErrorAction"},"Enums/ConnectionErrorAction.html#/s:18LDSwiftEventSource21ConnectionErrorActionO8shutdownyA2CmF":{"name":"shutdown","abstract":"<p>Specifies that the connection should be immediately shut down and not retried. The error will not be dispatched","parent_name":"ConnectionErrorAction"},"Enums/ConnectionErrorAction.html":{"name":"ConnectionErrorAction","abstract":"<p>Potential actions a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:18LDSwiftEventSource22ConnectionErrorHandlera\">ConnectionErrorHandler</a></code> can return</p>"},"Enums/ReadyState.html":{"name":"ReadyState","abstract":"<p>Enum values representing the states of an EventSource</p>"},"Classes/UnsuccessfulResponseError.html#/s:18LDSwiftEventSource25UnsuccessfulResponseErrorC12responseCodeSivp":{"name":"responseCode","abstract":"<p>The HTTP response code received.</p>","parent_name":"UnsuccessfulResponseError"},"Classes/UnsuccessfulResponseError.html#/s:18LDSwiftEventSource25UnsuccessfulResponseErrorC12responseCodeACSi_tcfc":{"name":"init(responseCode:)","abstract":"<p>Constructor for an <code>UnsuccessfulResponseError</code>.</p>","parent_name":"UnsuccessfulResponseError"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV7handlerAA0B7Handler_pvp":{"name":"handler","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EventHandler.html\">EventHandler</a></code> called in response to activity on the stream.</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV3url10Foundation3URLVvp":{"name":"url","abstract":"<p>The <code>URL</code> of the request used when connecting to the EventSource API.</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV6methodSSvp":{"name":"method","abstract":"<p>The HTTP method to use for the API request.</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV4body10Foundation4DataVSgvp":{"name":"body","abstract":"<p>Optional HTTP body to be included in the API request.</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV04lastB2IdSSSgvp":{"name":"lastEventId","abstract":"<p>An initial value for the last-event-id header to be sent on the initial request</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV7headersSDyS2SGvp":{"name":"headers","abstract":"<p>Additional HTTP headers to be set on the request</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV15headerTransformySDyS2SGAGcvp":{"name":"headerTransform","abstract":"<p>Transform function to allow dynamically configuring the headers on each API request.</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV13reconnectTimeSdvp":{"name":"reconnectTime","abstract":"<p>The minimum amount of time to wait before reconnecting after a failure</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV16maxReconnectTimeSdvp":{"name":"maxReconnectTime","abstract":"<p>The maximum amount of time to wait before reconnecting after a failure</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV21backoffResetThresholdSdvp":{"name":"backoffResetThreshold","abstract":"<p>The minimum amount of time for an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EventSource.html\">EventSource</a></code> connection to remain open before allowing the connection","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV11idleTimeoutSdvp":{"name":"idleTimeout","abstract":"<p>The maximum amount of time between receiving any data before considering the connection to have timed out.</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV23urlSessionConfigurationSo012NSURLSessionG0Cvp":{"name":"urlSessionConfiguration","abstract":"<p>The <code>URLSessionConfiguration</code> used to create the <code>URLSession</code>.</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV22connectionErrorHandleryAA010ConnectionF6ActionOs0F0_pcvp":{"name":"connectionErrorHandler","abstract":"<p>An error handler that is called when an error occurs and can shut down the client in response.</p>","parent_name":"Config"},"Classes/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV7handler3urlAeA0B7Handler_p_10Foundation3URLVtcfc":{"name":"init(handler:url:)","abstract":"<p>Create a new configuration with an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EventHandler.html\">EventHandler</a></code> and a <code>URL</code></p>","parent_name":"Config"},"Classes/EventSource.html#/s:18LDSwiftEventSource0bC0C6configA2C6ConfigV_tcfc":{"name":"init(config:)","abstract":"<p>Initialize the <code>EventSource</code> client with the given configuration.</p>","parent_name":"EventSource"},"Classes/EventSource.html#/s:18LDSwiftEventSource0bC0C5startyyF":{"name":"start()","abstract":"<p>Start the <code>EventSource</code> client.</p>","parent_name":"EventSource"},"Classes/EventSource.html#/s:18LDSwiftEventSource0bC0C4stopyyF":{"name":"stop()","abstract":"<p>Shuts down the <code>EventSource</code> client. It is not valid to restart the client after calling this function.</p>","parent_name":"EventSource"},"Classes/EventSource.html#/s:18LDSwiftEventSource0bC0C07getLastB2IdSSSgyF":{"name":"getLastEventId()","abstract":"<p>Get the most recently received event ID, or the value of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EventSource/Config.html#/s:18LDSwiftEventSource0bC0C6ConfigV04lastB2IdSSSgvp\">EventSource.Config.lastEventId</a></code> if no event IDs have","parent_name":"EventSource"},"Classes/EventSource/Config.html":{"name":"Config","abstract":"<p>Struct for configuring the EventSource.</p>","parent_name":"EventSource"},"Classes/EventSource.html":{"name":"EventSource","abstract":"<p>Provides an EventSource client for consuming Server-Sent Events.</p>"},"Classes/UnsuccessfulResponseError.html":{"name":"UnsuccessfulResponseError","abstract":"<p>Error class that indicates the remote server returned an unsuccessful HTTP response code.</p>"},"changelog.html":{"name":"CHANGELOG"},"contributing.html":{"name":"CONTRIBUTING"},"licensetxt.html":{"name":"LICENSE.txt"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}